class Clock:â€‹

    def __init__(self, hours=0, minutes=0, seconds=0):
        """
        Overloaded constructor for the Clock class.

        Initializes the clock with provided hours, minutes, and seconds.

        If no arguments are given, initializes hours, minutes, and seconds to 0.

        :param hours: Initial hours (integer, 0-23).

        :param minutes: Initial minutes (integer, 0-59).

        :param seconds: Initial seconds (integer, 0-59).

        """

        self.setTime(hours, minutes, seconds)

    def setTime(self, hours, minutes, seconds):

        """

        Sets the hours, minutes, and seconds of the clock in military time format.

        Ensures that values are within valid ranges (0-23 for hours, 0-59 for minutes/seconds).

        If values are out of range, they are set to 0.

        :param hours: The hours to set (integer).

        :param minutes: The minutes to set (integer).

        :param seconds: The seconds to set (integer).

        """

        if 0 <= hours <= 23:

            self.__hours = hours

        else:

            self.__hours = 0  # Default to 0 if out of range

        if 0 <= minutes <= 59:

            self.__minutes = minutes

        else:

            self.__minutes = 0  # Default to 0 if out of range

        if 0 <= seconds <= 59:

            self.__seconds = seconds

        else:

            self.__seconds = 0  # Default to 0 if out of range

    def getHours(self):

        """

        Returns the current hours of the clock.

        :return: The current hours (integer).

        """

        return self.__hours

    def getMinutes(self):

        """

        Returns the current minutes of the clock.

        :return: The current minutes (integer).

        """

        return self.__minutes

    def getSeconds(self):

        """

        Returns the current seconds of the clock.

        :return: The current seconds (integer).

        """

        return self.__seconds

    def printTime(self):

        """

        Prints the current time in the format HH:MM:SS (e.g., 03:13:09).

        Uses string formatting to ensure two digits for each component.

        """

        print(f"{self.__hours:02}:{self.__minutes:02}:{self.__seconds:02}")
